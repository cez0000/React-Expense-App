{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cezar\\\\Desktop\\\\react-order-app\\\\my-app\\\\src\\\\store\\\\CartProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    // const existingCartItemIndex = state.items.findIndex((item) => item.id === action.item.id);\n    // const existingItem = state.items[existingCartItemIndex];\n    // const updatedTotalamount = state.totalAmount - existingItem.price;\n    // let updatedItems;\n    // if (existingItem.amount === 1) {\n    //     updatedItems = state.items.filter(item => item.id !== action.id)\n    // } else {\n    //     const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n    //     updatedItems = [...state.items];\n    //     updatedItems[existingCartItemIndex] = updatedItem;\n    //     return {\n    //         items: updatedItems,\n    //         totalAmount: updatedTotalamount\n    //     }\n    // }\n    console.log(state.items);\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItem = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItem = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItem,\n    removeItem: removeItem\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","console","log","CartProvider","props","cartState","dispatchCartAction","addItem","removeItem","cartContext","children"],"sources":["C:/Users/Cezar/Desktop/react-order-app/my-app/src/store/CartProvider.jsx"],"sourcesContent":["import CartContext from \"./cart-context\";\r\nimport { useReducer } from \"react\";\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n    if (action.type === 'ADD') {\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n\r\n        const existingCartItemIndex = state.items.findIndex((item) => item.id === action.item.id);\r\n\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n        let updatedItems;\r\n        if (existingCartItem) {\r\n            const updatedItem = {\r\n                ...existingCartItem,\r\n                amount: existingCartItem.amount + action.item.amount\r\n            };\r\n            updatedItems = [...state.items]\r\n            updatedItems[existingCartItemIndex] = updatedItem\r\n        } else {\r\n            updatedItems = state.items.concat(action.item)\r\n        }\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        }\r\n    }\r\n    if (action.type === 'REMOVE') {\r\n        // const existingCartItemIndex = state.items.findIndex((item) => item.id === action.item.id);\r\n        // const existingItem = state.items[existingCartItemIndex];\r\n        // const updatedTotalamount = state.totalAmount - existingItem.price;\r\n        // let updatedItems;\r\n        // if (existingItem.amount === 1) {\r\n        //     updatedItems = state.items.filter(item => item.id !== action.id)\r\n        // } else {\r\n        //     const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n        //     updatedItems = [...state.items];\r\n        //     updatedItems[existingCartItemIndex] = updatedItem;\r\n\r\n        //     return {\r\n        //         items: updatedItems,\r\n        //         totalAmount: updatedTotalamount\r\n        //     }\r\n        // }\r\n        console.log(state.items);\r\n    }\r\n    return defaultCartState\r\n}\r\n\r\nconst CartProvider = props => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState)\r\n\r\n    const addItem = item => {\r\n        dispatchCartAction({ type: 'ADD', item: item })\r\n    };\r\n    const removeItem = id => {\r\n        dispatchCartAction({ type: 'REMOVE', id: id })\r\n    }\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItem,\r\n        removeItem: removeItem\r\n    }\r\n    return (\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n};\r\n\r\nexport default CartProvider"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,gBAAgB,GAAG;EACrBC,KAAK,EAAE,EADc;EAErBC,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACnC,IAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;IACvB,MAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA/E;IAEA,MAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAAuBJ,IAAD,IAAUA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EAAxD,CAA9B;IAEA,MAAMC,gBAAgB,GAAGV,KAAK,CAACH,KAAN,CAAYU,qBAAZ,CAAzB;IACA,IAAII,YAAJ;;IACA,IAAID,gBAAJ,EAAsB;MAClB,MAAME,WAAW,GAAG,EAChB,GAAGF,gBADa;QAEhBJ,MAAM,EAAEI,gBAAgB,CAACJ,MAAjB,GAA0BL,MAAM,CAACG,IAAP,CAAYE;MAF9B,CAApB;MAIAK,YAAY,GAAG,CAAC,GAAGX,KAAK,CAACH,KAAV,CAAf;MACAc,YAAY,CAACJ,qBAAD,CAAZ,GAAsCK,WAAtC;IACH,CAPD,MAOO;MACHD,YAAY,GAAGX,KAAK,CAACH,KAAN,CAAYgB,MAAZ,CAAmBZ,MAAM,CAACG,IAA1B,CAAf;IACH;;IACD,OAAO;MACHP,KAAK,EAAEc,YADJ;MAEHb,WAAW,EAAEK;IAFV,CAAP;EAIH;;EACD,IAAIF,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;IAC1B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACAY,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACH,KAAlB;EACH;;EACD,OAAOD,gBAAP;AACH,CA3CD;;AA6CA,MAAMoB,YAAY,GAAGC,KAAK,IAAI;EAAA;;EAC1B,MAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCxB,UAAU,CAACI,WAAD,EAAcH,gBAAd,CAAlD;;EAEA,MAAMwB,OAAO,GAAGhB,IAAI,IAAI;IACpBe,kBAAkB,CAAC;MAAEjB,IAAI,EAAE,KAAR;MAAeE,IAAI,EAAEA;IAArB,CAAD,CAAlB;EACH,CAFD;;EAGA,MAAMiB,UAAU,GAAGZ,EAAE,IAAI;IACrBU,kBAAkB,CAAC;MAAEjB,IAAI,EAAE,QAAR;MAAkBO,EAAE,EAAEA;IAAtB,CAAD,CAAlB;EACH,CAFD;;EAGA,MAAMa,WAAW,GAAG;IAChBzB,KAAK,EAAEqB,SAAS,CAACrB,KADD;IAEhBC,WAAW,EAAEoB,SAAS,CAACpB,WAFP;IAGhBsB,OAAO,EAAEA,OAHO;IAIhBC,UAAU,EAAEA;EAJI,CAApB;EAMA,oBACI,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEC,WAA7B;IAAA,UACKL,KAAK,CAACM;EADX;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CApBD;;GAAMP,Y;;KAAAA,Y;AAsBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}